<UserControl x:Class="TradeHubAnalyst.Views.StationTradingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:TradeHubAnalyst.Libraries">
    
    <UserControl.Resources>
        <CollectionViewSource x:Key="TradeList" Source="{Binding Trades}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="StartTime.Date" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <converters:InvisibleIfStringEmptyValueConverter x:Key="InvisibleIfEmpty" />
        <converters:InvisibleIfZeroValueConverter x:Key="InvisibleIfZeroValue"/>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="20,20,20,10">

            <TextBlock Margin="0,2,0,0">Broker's fee:</TextBlock>
            <TextBox Margin="10,0,0,0" Padding="1,0,0,0" Name="tbBrokersFee" Width="50" Text="{Binding Path=UserBrokersFee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Popup Placement="Bottom" PlacementTarget="{Binding ElementName=tbUserBrokersFee}" IsOpen="{Binding Path=PopupUserBrokersFee, Mode=OneWay}" HorizontalOffset="2" VerticalOffset="2">
                <Border BorderBrush="Gainsboro" BorderThickness="1" Background="WhiteSmoke">
                    <TextBlock Background="Transparent" Margin="2" Text="Only numbers and . allowed!" />
                </Border>
            </Popup>
            <TextBlock Margin="10,2,0,0">%</TextBlock>


            <TextBlock Margin="149,2,0,0">Sales tax:</TextBlock>
            <TextBox Margin="10,0,0,0" Name="tbUserSalesTax" Width="50" Text="{Binding Path=UserSalesTax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Popup Placement="Bottom" PlacementTarget="{Binding ElementName=tbUserSalesTax}" IsOpen="{Binding Path=PopupUserSalesTax, Mode=OneWay}" HorizontalOffset="2" VerticalOffset="2">
                <Border BorderBrush="Gainsboro" BorderThickness="1" Background="WhiteSmoke">
                    <TextBlock Background="Transparent" Margin="2" Text="Only numbers and . allowed!" />
                </Border>
            </Popup>
            <TextBlock Margin="10,2,0,0">%</TextBlock>

            <TextBlock Margin="149,2,0,0" Text="From:" />
            <ComboBox Margin="10,0,0,0" Width="330" VerticalAlignment="Center" HorizontalAlignment="Center" Name="cbStations" IsEnabled="True" ItemsSource="{Binding ComboBoxStations}" SelectedValue="{Binding ComboBoxSelected}" DisplayMemberPath="name"  SelectedValuePath="id" />
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="140"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0">
                <TextBlock Name="tbStatus" Margin="20,20,0,9">To begin, please click refresh data.</TextBlock>

                <ProgressBar Margin="20,0,20,20" Height="15" Name="pbRefresh" />
            </StackPanel>
            <WrapPanel Grid.Row="0" Grid.Column="1">
                <Button Background="LightGray" Margin="20,20,20,20" Height="40" Width="100" Name="btnRefresh" Click="btnStartWorker_Click">Refresh data</Button>
            </WrapPanel>
        </Grid>

        <DataGrid Grid.Row="2" ItemsSource="{Binding Source={StaticResource TradeList}}" AutoGenerateColumns="False" IsReadOnly="True" 
                  GridLinesVisibility="All" HorizontalGridLinesBrush="Gainsboro" VerticalGridLinesBrush="Gainsboro" HeadersVisibility="Column" Sorting="DataGrid_Sorting"
                  HorizontalAlignment="Left" VerticalAlignment="Stretch" IsSynchronizedWithCurrentItem="False" Height="458" CanUserAddRows="false" VirtualizingPanel.ScrollUnit="Pixel"
                  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" IsEnabled="False" Name="gridMain" Margin="20,0,20,0">

            <DataGrid.Resources>

                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="BorderBrush" Value="Gainsboro"/>
                    <Setter Property="BorderThickness" Value="1,1,1,1"/>
                    <Setter Property="Background" Value="White" />
                    <Setter Property="AlternationCount" Value="2" />
                </Style>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="BorderThickness" Value="0,0,1,0"/>
                    <Setter Property="Padding" Value="7,2,0,3" />

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray"/>


                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="White"></Setter>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="WhiteSmoke"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Item" Width="442" Binding="{Binding item}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTextColumn Header="Buy price [Isk]" Width="100" Binding="{Binding buy_price, Converter={StaticResource InvisibleIfZeroValue}}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTextColumn Header="Sell price [Isk]" Width="100" Binding="{Binding sell_price, Converter={StaticResource InvisibleIfZeroValue}}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTextColumn Header="Spread [Isk]" Width="100" Binding="{Binding spread_isk, Converter={StaticResource InvisibleIfZeroValue}}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTextColumn Header="Spread [%]" Width="100" Binding="{Binding spread_percent, Converter={StaticResource InvisibleIfZeroValue}}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTemplateColumn Header="EveMarketer" Width="80" CanUserSort="False" CanUserResize="False" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Visibility="{Binding link, Converter={StaticResource InvisibleIfEmpty}}" VerticalAlignment="Center" Padding="5,0,0,0">
                                <Hyperlink NavigateUri="{Binding link}" RequestNavigate="Hyperlink_RequestNavigate">
                                    Open
                                </Hyperlink>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>



    </Grid>
</UserControl>
