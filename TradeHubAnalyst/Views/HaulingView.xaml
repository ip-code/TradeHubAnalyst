<UserControl
    x:Class="TradeHubAnalyst.Views.HaulingView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:converters="clr-namespace:TradeHubAnalyst.Libraries">

    <UserControl.Resources>
        <CollectionViewSource x:Key="TradeList" Source="{Binding Trades}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="StartTime.Date" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <converters:InvisibleIfStringEmptyValueConverter x:Key="InvisibleIfEmpty" />
        <converters:InvisibleIfZeroValueConverter x:Key="InvisibleIfZeroValue" />
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="20,20,20,10">

            <TextBlock Margin="0,2,0,0">Cargo capacity:</TextBlock>
            <TextBox Margin="10,0,0,0" Name="tbUserargoCapacity" Width="80" Text="{Binding Path=UserCargoCapacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Popup Placement="Bottom" PlacementTarget="{Binding ElementName=tbUserargoCapacity}" IsOpen="{Binding Path=PopupUserCargoCapacity, Mode=OneWay}" HorizontalOffset="2" VerticalOffset="2">
                <Border BorderBrush="Gainsboro" BorderThickness="1" Background="WhiteSmoke">
                    <TextBlock Background="Transparent" Margin="2" Text="Only numbers and . allowed!" />
                </Border>
            </Popup>
            <TextBlock Margin="10,2,0,0">m3</TextBlock>

            <TextBlock Margin="64,2,0,0">Money for trade:</TextBlock>
            <TextBox Margin="10,0,0,0" Name="tbUserAvailableMoney" Width="120" Text="{Binding Path=UserAvailableMoney, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Popup Placement="Bottom" PlacementTarget="{Binding ElementName=tbUserAvailableMoney}" IsOpen="{Binding Path=PopupUserAvailableMoney, Mode=OneWay}" HorizontalOffset="2" VerticalOffset="2">
                <Border BorderBrush="Gainsboro" BorderThickness="1" Background="WhiteSmoke">
                    <TextBlock Background="Transparent" Margin="2" Text="Only numbers and . allowed!" />
                </Border>
            </Popup>
            <TextBlock Margin="10,2,0,0">ISK</TextBlock>

            <TextBlock Margin="64,2,0,0" Text="From:" />
            <ComboBox Margin="10,0,0,0" Width="330" VerticalAlignment="Center" HorizontalAlignment="Center" Name="cbStations" IsEnabled="True" ItemsSource="{Binding ComboBoxStations}" SelectedValue="{Binding ComboBoxSelected}" DisplayMemberPath="name"  SelectedValuePath="id" />
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="140" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0">
                <TextBlock Name="tbStatus" Margin="20,20,0,9">To begin, please click refresh data.</TextBlock>

                <ProgressBar Margin="20,0,20,20" Height="15" Name="pbRefresh" />
            </StackPanel>
            <WrapPanel Grid.Row="0" Grid.Column="1">
                <Button Background="LightGray" Margin="20,20,20,20" Height="40" Width="100" Name="btnRefresh" Click="btnStartWorker_Click">Refresh data</Button>
            </WrapPanel>
        </Grid>
        <DataGrid Grid.Row="2" ItemsSource="{Binding Source={StaticResource TradeList}}" AutoGenerateColumns="False" IsReadOnly="True"
                  GridLinesVisibility="All" HorizontalGridLinesBrush="Gainsboro" VerticalGridLinesBrush="Gainsboro" HeadersVisibility="Column" Sorting="DataGrid_Sorting"
                  HorizontalAlignment="Left" VerticalAlignment="Stretch" IsSynchronizedWithCurrentItem="False" Height="458" CanUserAddRows="false" VirtualizingPanel.ScrollUnit="Pixel"
                  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" IsEnabled="False" Name="gridMain" SelectionChanged="gridMain_SelectionChanged" Margin="20,0,20,0">

            <DataGrid.Resources>

                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="BorderBrush" Value="Gainsboro" />
                    <Setter Property="BorderThickness" Value="1,1,1,1" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="AlternationCount" Value="2" />
                </Style>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="BorderThickness" Value="0,0,1,0" />
                    <Setter Property="Padding" Value="7,2,0,3" />

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray" />

                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="White"></Setter>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="WhiteSmoke"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Item" Width="383" Binding="{Binding Item}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTextColumn Header="From" Width="50" Binding="{Binding From}" CanUserSort="True" Foreground="Black" CanUserResize="False">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="{Binding FromFull}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="To" Width="50" Binding="{Binding To}" CanUserSort="True" Foreground="Black" CanUserResize="False">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip" Value="{Binding ToFull}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Quantity" Width="60" Binding="{Binding NumItems, StringFormat={}{0:#\,###}}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTextColumn Header="Purchase price [Isk]" Width="120" Binding="{Binding Price, Converter={StaticResource InvisibleIfZeroValue}}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTextColumn Header="Possible profit [Isk]" Width="120" Binding="{Binding Profit, Converter={StaticResource InvisibleIfZeroValue}}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTextColumn Header="ROI [%]" Width="60" Binding="{Binding ROI, Converter={StaticResource InvisibleIfZeroValue}}" CanUserSort="True" Foreground="Black" CanUserResize="False" />
                <DataGridTemplateColumn Header="EveMarketer" Width="80" CanUserSort="False" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Visibility="{Binding Link, Converter={StaticResource InvisibleIfEmpty}}" VerticalAlignment="Center" Padding="5,0,0,0">
                                <Hyperlink NavigateUri="{Binding Link}" RequestNavigate="Hyperlink_RequestNavigate">
                                    Open
                                </Hyperlink>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>